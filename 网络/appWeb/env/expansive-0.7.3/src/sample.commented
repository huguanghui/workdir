/*
    sample.json - Sample Expansive Configuration

    This file includes all configuration propertis. Most of these have intelligent defaults and so a minimal 
    expansive.json may be much smaller.

    Expansive configuration files are enhanced JSON files that more closely resemble Javascript syntax. 
    The following enhancements are permitted:
        - Comments
        - Property key names without quotes
        - Strings with single quotes
 */
{
    /*
        Document meta information
     */
    meta: {
        description: 'Meta data description. Value read from package.json by default',
        title:       'Home page title. Value read from package.json by default',
        site:        'Home page URL',
        url:         'Current document URL',

    /*
        Internal meta properties

        base        Source file without 'contents/lib'.
        control     Control collection specified in exp.json.
        date        Generation date of the document.
        dest        Destination filename being created. Relative path including 'dist'.
        document    Source of the document being processed. For partials/layouts, it is the invoking document.
        extension   The extension of the public document filename.
        extensions  The set of extensions on the original input document.
        from        The filename extension being processed by the current transformation.
        isLayout    True if a layout is being processed.
        isPartial   True if a partial page is being processed.
        layout      Layout page in use. Set to '' if no layout being used.
        path        Destination without 'dist'. Note: may have different extensions to base.
        source      Current source file being processed. Relative path including 'contents/lib/layouts/partials'.
        top         Relative Url to application home page.
        url         Url made from 'path'.

        sitemap: {  // Generate a site map
            files: [ '**.html' ],
        }
     */
    },

    /*
        Expansive control section
     */
    control: {
        /*
            Copy these directories from documents without rending. Not set by default.
         */
        copy: [ 'images' ],

        /*
            Dependency relationships. Used to detect when a document must be rendered due to
            changes in files that it depends upon. 

            The hash key is the document path and the value is a set of files that if modified,
            cause the document to be rendered. The document and files are relative to the 
            documents directory. The set of files can be a string or an array of files. Each 
            value file may contain '*' or '**'.
    
            The exp-less plugin contains the default rule:
            dependencies: { 'css/all.css.less': '**.less' },
         */

        /*
            Directory mappings. These are the default directory settings.
         */
        directories: {
            contents:   'contents',
            dest:       'dest',
            files:      'files',
            layouts:    'layouts',
            lib:        'lib',
            paks:       'paks',
            partials:   'partials',
        },

        /*
            Documents to process. Relative to top.
         */
        documents: [ '**' ],

        /*
            Files to copy outside of the documents directory. This defaults to [ 'files' ] if unset.
         */
        files: [ 'files' ],

        /*
            Address on which to listen. Format is: 'IP:PORT', but may be just a port number. Defaults to 4000.
         */
        listen: '4000',

        /*
            List of plugins to load. These are installed via 'exp install name'.
            These names should not have the 'exp-' prefix.

            plugins: [ 'ng', 'js', 'less', 'css', 'esp', 'gzip' ]
         */
        plugins: [ ],

        /*
            Scripts to inject into the global space
         */
        script: `
            function menu(item) meta.menu == item ? 'active' : ''
        `,

        serve: 'command line for external web server',

        /*
            Generate a sitemap

            sitemap: {
                files: [ '**.html' ],
            },
         */

        /*
            Explict transformation pipeline. This is normally built automatically by plugins based
            on the order of the plugins in the 'plugins' property. However, it may be explicitly 
            overridden here. The pipeline values are the plugin service names.

            transforms: {
                'less -> css': [ 'compile-less', 'prefix-css', 'minify-css', 'gzip' ]
            }
         */

        /*
            Time period in milliseconds to wait when watching for changes. Must be > 1000 (1 sec)
         */
        watch: 1000,
    },

    /*
        Set of per-mode properties. Depending on the value of 'mode' in package.json, the
        selected collection it made active by copying the properties up one level.
     */
    debug: {
    },

    /*
        Sample release configuration
     */
    release: {
        control: {
        },
        services: {
            //  Per-service configuration
            'compile-ng-js': {
                // files: [ 'lib/angular*/**.js', 'lib/esp*/**.js', 'app/**.js' ]
            }
        }
    }
}
